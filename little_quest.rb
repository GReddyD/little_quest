puts "Добро пожаловать в наш загадочный мир приключений, фантастики и магии"

puts "Расскажи о себе. 
Какого вы пола?
1- Мужчина
2- Женщина"

choice1 = gets.to_i

#Если пользователь вводит не 1 или 2, то вопрос задается в цикле пока пользователь не укажет 1 или 2
until (choice1 == 1 || choice1 == 2)
  puts "Расскажи о себе. 
  Какого вы пола?
  1- Мужчина
  2- Женщина"
  choice1 = gets.to_i
end

#Если ввел 1 или 2
if (choice1 == 1)
  puts "Какой вы рассы?
  1- Человек
  2- Эльф
  3- Орк
  4- Гном
  5- Фей"
elsif (choice1 == 2)
  puts "Какой вы рассы?
  1- Человек
  2- Эльфийка
  3- Орк
  4- Гномиха
  5- Фея"
end

choice2 = gets.to_i

#Если пользователь вводит не 1,2,3,4 или 5, то вопрос задается в цикле пока пользователь не укажет 1,2,3,4 или 5
until (choice2 == 1 || choice2 == 2 || choice2 == 3 || choice2 == 4 || choice2 == 5)
  if (choice1 == 1)
    puts "Какой вы рассы?
    1- Человек
    2- Эльф
    3- Орк
    4- Гном
    5- Фей"
  elsif (choice1 == 2)
    puts "Какой вы рассы?
    1- Человек
    2- Эльфийка
    3- Орк
    4- Гномиха
    5- Фея"
  end
  choice2 = gets.to_i
end

puts "Куда вы направляетесь?
1- В ближайшую таверну
2- К владельцу этих земель"

choice3 = gets.to_i

#Если пользователь вводит не 1 или 2, то вопрос задается в цикле пока пользователь не укажет 1 или 2
until (choice3 == 1 || choice3 == 2)
  puts "Куда вы направляетесь?
  1- В ближайшую таверну
  2- К владельцу этих земель"
  choice3 = gets.to_i
end

if (choice3 == 1)
  puts "Вы нарпавляетесь в ближайшую таверну под название \"Сумеречная бездна\""
  check_time = Time.now.hour
  if (check_time > 23 || check_time < 12)
    puts "Стучитесь, вам ни кто не открывает и дверь не поддается, так как сейчас " 
    + check_time.to_s + " час, то таверна закрыта. На двери бумага мы работаем с 12:00 до 23:00"
    puts "Ждать открытия?
    1 - Да
    2 - Нет"
    
    choice4 = gets.to_i
 
    #Если пользователь вводит не 1 или 2, то вопрос задается в цикле пока пользователь не укажет 1 или 2
    until (choice4 == 1 || choice4 == 2)
      puts "Стучитесь, вам ни кто не открывает и дверь не поддается, так как сейчас " 
      + check_time.to_s + " час, то таверна закрыта. На двери бумага мы работаем с 12:00 до 23:00"
      puts "Ждать открытия?
      1 - Да
      2 - Нет"
      choice4 = gets.to_i		
    end
			
    if (choice4 == 1)
      abort "Вы решили подождать. Когда вы поворачивались, что бы присесть для ожидания, вы увидели тень и только блеск меча, который снес вашу голову. Очень жаль, но вы погибли"
    else	
      abort "Вы решили идти дальше. Когда вы поворачивались, вы увидели тень и только блеск меча, который снес вашу голову. Очень жаль, но вы погибли"
    end
  else
    puts "Подходите к двери, на ней листок \"Открыты с 12:00 до 23:00\", так как сейчас " + check_time.to_s + " час, то таверна открыта."
    puts "Войти?
    1 - Да
    2 - Нет"
    choice5 = gets.to_i
    
    #Если пользователь вводит не 1 или 2, то вопрос задается в цикле пока пользователь не укажет 1 или 2
    until (choice5 == 1 || choice5 == 2)
      puts "Войти?
      1 - Да
      2 - Нет"
      choice5 = gets.to_i
    end
		
    if (choice5 == 1)
      abort "Вы решили войти. Когда вы войшли, то попали в потасовку и в ней вас смертельно ранили. Очень жаль, но вы погибли"
    else	
      abort "Вы решили идти дальше. Когда вы поворачивались, вы увидели тень и только блеск меча, который снес вашу голову. Очень жаль, но вы погибли"
    end
  end
else
  check_time = Time.now.hour
  if (check_time > 23 || check_time < 12)
    abort "Вы решели пойти к владельцу этих земель. Вы подошли к его замку и так как сейчас " 
    + check_time.to_s + " час, то по приказу владельца этих земель вы были казнены из-за того, что вы пришли к нему в не то время. Очень жаль, но вы погибли"
  else
    abort "Вы решели пойти к владельцу этих земель. Вы подошли к его замку и так как сейчас " + check_time.to_s + " час, то вас впустили во внутырь замка. У вас был длительный разговор с владельцем. Во время разговора вы оскарбили владельца и он приказал вас немедленно казнить. Очень жаль, но вы погибли"
  end
end
